% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bimm_fit.R
\name{bimm_fit}
\alias{bimm_fit}
\title{Fit Binary Mixed Model (BiMM)}
\usage{
bimm_fit(
  data,
  formula,
  verbose,
  n_iteration,
  fun_model_ml = NULL,
  fun_model_mer = NULL,
  fun_pred_ml = NULL,
  fun_pred_mer = NULL
)
}
\arguments{
\item{data}{a data frame containing the variables in the model.}

\item{formula}{An object of class "formula" that is akin to \code{formula} in
\code{\link[lme4:lmer]{lme4::lmer()}} where both fixed and random effects are written.
Random-effects terms are distinguished by vertical bars (|) inside of
parentheses. See examples.}

\item{verbose}{An integer value of 0, 1, or 2.
\itemize{
\item If verbose = 0, nothing is printed to console.
\item If verbose = 1, select steps are printed to console.
\item If verbose = 2, almost all processes are printed to console.
}}

\item{n_iteration}{A positive integer indicating how many iterations
to complete. More details on 'iterations' can be found in the 'Details'
section.}

\item{fun_model_ml}{a function to fit the machine learning model
during the iterative bimm procedure. If \code{NULL}, a default function
will be used.}

\item{fun_model_mer}{a function to fit the mixed effects regression
model during the iterative bimm procedure. If \code{NULL}, a default
function will be used.}

\item{fun_pred_ml}{a function to compute predicted values from the
machine learning model. If \code{NULL}, a default function will be used.}

\item{fun_pred_mer}{a function to compute predicted values from the
mixed effects regression model. If \code{NULL}, a default function
will be used.}
}
\value{
An object of class \code{bimm_object} with the following components:
\itemize{
\item \code{colname_outcome}: the name of the outcome variable.
\item \code{colname_id}: the name of the cluster identifier
\item \code{formula_ml}: the formula passed to the machine learning model
\item \code{formula_mer}: the formula passed to the mixed effects regression model.
\item \code{history}: a dataframe showing convergence metrics for each iteration.
Each row represents the convergence metrics at a specific iteration.
\item \code{pseudo_outcome}: a dataframe containing pseudo outcome values for
each iteration. Each column represents the pseudo outcome at a
specific iteration.
\item \code{fun_model_ml}: function used to fit the machine learning model.
\item \code{fun_model_mer}: function used to fit the mixed effects regression model.
\item \code{fun_pred_ml}: function used to compute predictions with the
machine learning model.
\item \code{fun_pred_mer}: function used to compute predictions with the
mixed effects regrssion model.
\item \code{model_ml}: the machine learning model
\item \code{model_mer}: the mixed effects regression model
\item \code{verbose}: the verbosity of the \code{bimm_object}.
\item \code{iteration_current} the current iteration of the \code{bimm_object}
\item \code{n_iteration} the total number of iterations.
}
}
\description{
BiMMs are designed to form predictions for clustered outcomes
using standard machine learning algorithms in combination with mixed
effects regression models. The BiMM algorithm is as follows:\preformatted{1. Fit a machine learning model to the specified outcome variable.
   Assume observations are independent.

2. Calculate predicted probabilities for all observations.

3. Fit a mixed effects regression model that accounts for correlations
    among clusters and uses the predicted probabilities as the only
    fixed effect.

4. Update the outcome variable using predicted probabilities from
   the binary mixes model. Use all estimated random effects in the
   predicted values. Apply a splitting function to dichotomize
   the predicted probabilities.

5. Repeat steps 1-4 until convergence criteria are met.
}

Predictions for observations included within the training data are made
using mixed effects regression model. For observations in testing data, predictions
are made using only the machine learning model.
}
\examples{

bimm_fit(data = hospital[1:1000, ],
         formula = remission ~ . + (1 | DID),
         verbose = TRUE,
         n_iteration = 2)

}
